.contextual
  - if User.current.allowed_to?(:add_incoming_letters, nil, :global=>true)
    = link_to l(:button_add), {:action => 'new', :organization_id => @organization.id}, :class => 'icon icon-add'

%h2= t(:label_incoming)

- form_tag({}, :method => :get) do
  %fieldset
    %legend= l(:label_filter_plural)

    = hidden_field_tag :organization_id, @organization.id

    %label{:for=>'shipping_type'}= l(:field_shipping_type) + ":"
    %select{:id => 'shipping_type', :name => 'shipping_type', :class => "small", :onchange => "this.form.submit(); return false;"}
      %option
      - t(:list_shipping_type).each do |shipping_type|
        - if params[:shipping_type] == shipping_type
          %option{:value => shipping_type, :selected => "selected"}
            = shipping_type
            = "(#{IncomingLetter.eql_field(shipping_type, :shipping_type).this_organization(@organization.id).count})"
        - else
          %option{:value => shipping_type}
            = shipping_type
            = "(#{IncomingLetter.eql_field(shipping_type, :shipping_type).this_organization(@organization.id).count})"

    %label{:for=>'original_required'}= l(:field_original_required) + ":"
    %select{:id => 'original_required', :name => 'original_required', :class => "small", :onchange => "this.form.submit(); return false;"}
      %option
      - t(:list_original_required).each do |original_required|
        - if params[:original_required] == original_required
          %option{:value => original_required, :selected => "selected"}
            = original_required
            = "(#{IncomingLetter.eql_field(original_required, :original_required).this_organization(@organization.id).count})"
        - else
          %option{:value => original_required}
            = original_required   
            = "(#{IncomingLetter.eql_field(original_required, :original_required).this_organization(@organization.id).count})"
            

    %label{:for=>'executor_id'}= l(:field_executor) + ":"
    %select{:id => 'executor_id', :name => 'executor_id', :class => "small", :onchange => "this.form.submit(); return false;"}
      %option
      - possible_executors.each do |executor|
        - if params[:executor_id] == executor.id.to_s
          %option{:value => executor.id, :selected => "selected"}
            = executor.name
            = "(#{IncomingLetter.eql_field(executor.id, :executor_id).this_organization(@organization.id).count})"
        - else
          %option{:value => executor.id}
            = executor.name
            = "(#{IncomingLetter.eql_field(executor.id, :executor_id).this_organization(@organization.id).count})"

    - %w{shipping_on created_on}.each do |type_date|
      %br
      %label=l(:"field_#{type_date}") + ":"
      - %w{all}.each do |key|
        - if params[:"time_period_#{type_date}"] == key
          %strong
            = l(:"label_#{key}")
          = hidden_field_tag :"time_period_#{type_date}", key
        - else
          = link_to l(:"label_#{key}"), params.merge( :"time_period_#{type_date}" => key, :"#{type_date}" => "" )
        = "(#{IncomingLetter.time_period(key, type_date).this_organization(@organization.id).count}) /"
      
      %input{:id => type_date, :name => type_date, :size => 10, :onchange => "this.form.submit(); return false;", :value => (params[type_date] if params[:"time_period_#{type_date}"].blank?) }
      = calendar_for(type_date)
      - time_periods.each do |key|
        = "/"
        - if params[:"time_period_#{type_date}"] == key
          %strong
            = l(:"label_#{key}")
          = hidden_field_tag :"time_period_#{type_date}", key
        - else
          = link_to l(:"label_#{key}"), params.merge( :"time_period_#{type_date}" => key )
        = "(#{IncomingLetter.time_period(key, type_date).this_organization(@organization.id).count})"
   
&nbsp;

= render :partial => 'organization_menu'

- if @collection.any?
  .autoscroll
    %table.list
      %thead
        %tr
          = sort_header_tag('incoming_code', :caption => l(:field_incoming_code)) 
          = sort_header_tag('outgoing_code', :caption => l(:field_outgoing_code)) 
          = sort_header_tag('answer_for', :caption => l(:field_answer_for))
          = sort_header_tag('signer', :caption => l(:field_signer)) 
          = sort_header_tag('shipping_from', :caption => l(:field_shipping_from)) 
          = sort_header_tag('shipping_type', :caption => l(:field_shipping_type)) 
          = sort_header_tag('shipping_on', :caption => l(:field_shipping_on))       
          = sort_header_tag('recipient', :caption => l(:field_recipient)) 
          = sort_header_tag('original_required', :caption => l(:field_original_required)) 
          = sort_header_tag('created_on', :caption => l(:field_created_on), :default_order => 'desc') 
          = sort_header_tag('executor_id', :caption => l(:field_executor)) 
          %th
      %tbody
        - for object in @collection
          %tr{:class => "user "+cycle("odd", "even")}
            %td.incoming_code= link_to(h(object.incoming_code), incoming_letter_path(object))
            %td.outgoing_code= h(object.outgoing_code)
            %td.answer_for
              - if object.answer_for.present?
                = link_to h(object.answer_for), :controller => :outgoing_letters, :action => :show, :id => OutgoingLetter.find(:first, :conditions => {:organization_id => @organization.id, :outgoing_code => object.answer_for})
            %td.signer= h(object.signer)
            %td.shipping_from= h(object.shipping_from)
            %td.shipping_type= h(object.shipping_type)
            %td.shipping_on= format_date(object.shipping_on)          
            %td.recipient= h(object.recipient)
            %td.original_required= h(object.original_required)
            %td.created_on{:align=>"center"}= format_time(object.created_on)
            %td.executor= h(object.executor)
            %td.buttons
              - if object.editable_by?(User.current)
                = link_to l(:button_update), {:action => 'edit', :id => object.id}, :class => 'icon icon-edit'
              -# if object.destroyable_by?(User.current) 
                = link_to(l(:button_delete), incoming_letter_path(object), :confirm => l(:text_are_you_sure), :method => :delete, :class => 'icon icon-del')

  %p.pagination= pagination_links_full @pages, @count
- else
  %p.nodata
    = l(:label_no_data)

- form_tag({}, :method => :get) do
  %fieldset
    %legend= l(:label_filter_plural)

    = hidden_field_tag :organization_id, @organization.id
    = hidden_field_tag :shipping_type, params[:shipping_type]
    = hidden_field_tag :original_required, params[:original_required]
    = hidden_field_tag :time_period_shipping_on, params[:time_period_shipping_on]
    = hidden_field_tag :time_period_created_on, params[:time_period_created_on]
    
    %label{:for=>'incoming_code'}= l(:field_incoming_code) + ":"
    = text_field_tag 'incoming_code', params[:incoming_code], :size => 10

    %label{:for=>'signer'}= l(:field_signer) + ":"
    = text_field_tag 'signer', params[:signer], :size => 30

    %br

    %label{:for=>'outgoing_code'}= l(:field_outgoing_code) + ":"
    = text_field_tag 'outgoing_code', params[:outgoing_code], :size => 10

    %label{:for=>'recipient'}= l(:field_recipient) + ":"
    = text_field_tag 'recipient', params[:recipient], :size => 30

    %br    

    %label{:for=>'answer_for'}= l(:field_answer_for) + ":"
    = text_field_tag 'answer_for', params[:answer_for], :size => 10

    %label{:for=>'shipping_from'}= l(:field_shipping_from) + ":"
    = text_field_tag 'shipping_from', params[:shipping_from], :size => 30

    = submit_tag l(:button_apply), :class => "small", :name => nil
    = link_to l(:button_clear), {:action => params[:action]}, :class => 'icon icon-reload'

