= error_messages_for @object
- content_for :header_tags do
  = stylesheet_link_tag 'jquery.autocomplete.css', :plugin => "redmine_secretary"
  = javascript_include_tag 'jquery.js', :plugin => "redmine_secretary"
  = javascript_include_tag 'jquery.autocomplete.js', :plugin => "redmine_secretary"
.box.tabular
  .splitcontentleft
    %p= f.text_field :incoming_code, :required => true, :size => 10
    %p= f.text_field :outgoing_code, :size => 10
    %p= f.text_field :signer, :size => 40, :class => "autocomplete", "data-autocomplete_url" => autocomplete_for_incoming_letter_signer_incoming_letters_path
    %p= f.text_field :recipient, :size => 40
    
  .splitcontentright
    %p= f.select :executor_id, possible_executors.map {|c| [c.name, c.id]}, :required => true, :prompt => t(:prompt_please_select)
    %p
      = f.text_field :shipping_on, :size => 10
      = calendar_for('incoming_letter_shipping_on')
    %p= f.select :shipping_type, t(:list_shipping_type), :required => true, :prompt => t(:prompt_please_select)
    %p= f.text_field :shipping_from, :required => true, :size => 40
    %p= f.select :original_required, t(:list_original_required), :prompt => t(:prompt_please_select)
  %div{:style=>"clear:both"}
  - if ["new", "create"].include? params[:action]
    %p= f.text_field :subject, :size => 40
  %p= f.text_area :description, :cols => 60, :rows => 15, :class => 'wiki-edit'
  = link_to_attachments @object if @object.attachments.any? 
  %p#attachments_form
    = label_tag('attachments[1][file]', l(:label_attachment_plural))
    = render :partial => 'attachments/form', :locals => {:container => @object}
  - if @related_projects.present?
    %p
      %label= t(:field_projects) + ":"
    - @related_projects.each do |project|
      %p
        %label.inline{:for=>"projects_"+project.id.to_s, :id=>"projects_"+project.id.to_s+"_label"}
          = check_box_tag("projects[#{project.id}]", nil)
          = project.name

= wikitoolbar_for 'incoming_letter_description'
