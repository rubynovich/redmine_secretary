:css
  input.autocomlete { padding-left: 20px; }

= error_messages_for @object
.box.tabular
  %p= f.select :subject, t(:list_incoming_letter_subject), required: true, prompt: t(:prompt_please_select)
  .splitcontentleft
    %p= f.text_field :incoming_code, required: true, size: 10
    %p= f.text_field :outgoing_code, size: 10
    %p= f.text_field :answer_for, size: 10

    %p
      = f.text_field :signer, size: 40
      =# link_to l(:button_add), {controller: 'contacts', action: 'new', project_id: Setting.plugin_redmine_secretary[:contact_project_id]}, class: 'icon icon-add'
    :javascript
      observeAutocompleteField('incoming_letter_signer', '#{escape_javascript autocomplete_for_signer_incoming_letters_path}')

    %p
      = f.select :recipient_user_id, options_from_collection_for_select(Person.active.sorted, :id, :name), include_blank: t(:prompt_please_select)
      - if @object.recipient.present?
        %em=h @object.recipient
    -#
      %p= f.text_field :recipient, size: 40
      :javascript
        observeAutocompleteField('incoming_letter_recipient', '#{escape_javascript autocomplete_for_recipient_incoming_letters_path}')

  .splitcontentright
    %p= f.select :executor_id, options_from_collection_for_select(possible_executors.sorted, :id, :name), include_blank: t(:prompt_please_select), required: true
    %p
      = f.text_field :shipping_on, size: 10
      = calendar_for('incoming_letter_shipping_on')
    %p= f.select :shipping_type, t(:list_shipping_type), required: true, prompt: t(:prompt_please_select)
    %p= f.select :courier_id, options_from_collection_for_select(Person.active.sorted, :id, :name, @object.courier_id), {include_blank: t(:prompt_please_select)}, {:disabled => @object.shipping_type != Setting[:plugin_redmine_secretary][:shipping_type]}
    :javascript
      $("select#incoming_letter_shipping_type").change( function() {        
        if ($("select#incoming_letter_shipping_type option:selected")[0].value == "Доставка нарочно"){
          $("select#incoming_letter_courier_id").attr( "disabled", false );
        } else {
          $("select#incoming_letter_courier_id").attr( "disabled", true );   
        }
      }); 


    %p
      = f.text_field :shipping_from, required: true, size: 40
      =# link_to l(:button_add), {controller: 'contacts', action: 'new', project_id: Setting.plugin_redmine_secretary[:contact_project_id], contact: {is_company: true}}, class: 'icon icon-add'
    :javascript
      observeAutocompleteField('incoming_letter_shipping_from', '#{escape_javascript autocomplete_for_shipping_from_incoming_letters_path}')


    %p= f.select :original_required, t(:list_original_required), prompt: t(:prompt_please_select)
  %div{style: "clear:both"}
  %p= f.text_area :description, cols: 60, rows: 15, class: 'wiki-edit'
  = link_to_attachments @object if @object.attachments.any?
  %p#attachments_form
    = label_tag('attachments[1][file]', l(:label_attachment_plural))
    = render partial: 'attachments/form', locals: {container: @object}
  - if @related_projects.present?
    %p
      %label= t(:label_project_plural) + ":"
    - @related_projects.each do |project|
      %p
        %label.inline{for: "projects_#{project.id}", id: "projects_#{project.id}_label"}
          = check_box_tag("projects[#{project.id}]", nil)
          = project.name

= wikitoolbar_for 'incoming_letter_description'

:javascript
  $(document).ready(function() {
    $('select#incoming_letter_courier_id').select2();
  });
