:css
  .inline-block{ display: inline-block }

.contextual
  = link_to l(:button_add), {:action => 'new', :organization_id => @organization.id}, :class => 'icon icon-add' if User.current.allowed_to?(:add_outgoing_letters, nil, :global=>true)

%h2= t(:label_outgoing)

%form{:method => :get}
  %fieldset
    %legend= l(:label_filter_plural)

    = hidden_field_tag :organization_id, @organization.id

    .inline-block
      %label{:for=>'project_id'}= l(:field_project) + ":"
      %select{:id => 'project_id', :name => 'project_id', :class => "small", :onchange => "this.form.submit(); return false;"}
        %option
        = project_tree_options_for_select(related_projects, :selected => @project)

    .inline-block
      %label{:for=>'subject'}= l(:field_subject) + ":"
      %select{:id => 'subject', :name => 'subject', :class => "small", :onchange => "this.form.submit(); return false;"}
        %option
        - t(:list_outgoing_letter_subject).each do |subject|
          - if params[:subject] == subject
            %option{:value => subject, :selected => "selected"}
              = subject
          - else
            %option{:value => subject}
              = subject

    .inline-block
      %label{:for=>'shipping_type'}= l(:field_shipping_type) + ":"
      %select{:id => 'shipping_type', :name => 'shipping_type', :class => "small", :onchange => "this.form.submit(); return false;"}
        %option
        - t(:list_shipping_type).each do |shipping_type|
          - if params[:shipping_type] == shipping_type
            %option{:value => shipping_type, :selected => "selected"}
              = shipping_type
              =# "(#{OutgoingLetter.eql_field(shipping_type, :shipping_type).this_organization(@organization.id).count})"
          - else
            %option{:value => shipping_type}
              = shipping_type
              =# "(#{OutgoingLetter.eql_field(shipping_type, :shipping_type).this_organization(@organization.id).count})"

    - %w{shipping_on served_on created_on}.each do |type_date|
      %br
      %label=l(:"field_#{type_date}") + ":"
      - %w{all}.each do |key|
        - if params[:"time_period_#{type_date}"] == key
          %strong
            = l(:"label_#{key}")
        - else
          = link_to l(:"label_#{key}"), params.merge( :"time_period_#{type_date}" => key, :"#{type_date}" => "" )
        =# "(#{OutgoingLetter.time_period(key, type_date).this_organization(@organization.id).count}) /"

      %input{:id => type_date, :name => type_date, :size => 10, :onchange => "this.form.submit(); return false;", :value => params[type_date]}
      = calendar_for(type_date)
      - time_periods.each do |key|
        = "/"
        - if params[:"time_period_#{type_date}"] == key
          %strong
            = l(:"label_#{key}")
        - else
          = link_to l(:"label_#{key}"), params.merge( :"time_period_#{type_date}" => key, :"#{type_date}" => "" )
        =# "(#{OutgoingLetter.time_period(key, type_date).this_organization(@organization.id).count})"

= render :partial => "organization_menu"

- if @collection.any?
  .autoscroll
    %table.list
      %thead
        %tr
          = sort_header_tag('outgoing_code', :caption => l(:field_outgoing_code))
          = sort_header_tag('incoming_code', :caption => l(:field_incoming_code))
          = sort_header_tag('answer_for', :caption => l(:field_answer_for))
          = sort_header_tag('subject', :caption => l(:field_subject))
          = sort_header_tag('signer', :caption => l(:field_signer))
          = sort_header_tag('shipping_to', :caption => l(:field_shipping_to))
          = sort_header_tag('shipping_type', :caption => l(:field_shipping_type))
          = sort_header_tag('shipping_on', :caption => l(:field_shipping_on))
          = sort_header_tag('recipient', :caption => l(:field_recipient))
          = sort_header_tag('served_on', :caption => l(:field_served_on))
          = sort_header_tag('created_on', :caption => l(:field_created_on), :default_order => 'desc')
          %th
      %tbody
        - for object in @collection
          %tr{:class => "user " + cycle("odd", "even")}
            %td.outgoing_code
              = link_to h(object.outgoing_code), outgoing_letter_path(object)
            %td.incoming_code
              = h(object.incoming_code)
            %td.answer_for
              - if object.answer_for.present?
                = link_to h(object.answer_for), :controller => :incoming_letters, :action => :show, :id => IncomingLetter.find(:first, :conditions => {:organization_id => @organization.id, :incoming_code => object.answer_for})
            %td.subject
              = h(object.subject)
            %td.signer
              = h(object.signer)
            %td.shipping_to
              = h(object.shipping_to)
            %td.shipping_type
              = h(object.shipping_type)
            %td.shipping_on
              = format_date(object.shipping_on)
            %td.recipient
              = h(object.recipient)
            %td.served_on
              = format_time(object.served_on)
            %td.created_on{:align=>"center"}
              = format_time(object.created_on)
            %td.buttons
              - if object.editable_by?(User.current)
                = link_to(l(:button_update), edit_outgoing_letter_path(object), :class => 'icon icon-edit')
              -# if object.destroyable_by?(User.current)
                = link_to(l(:button_delete), outgoing_letter_path(object), :confirm => l(:text_are_you_sure), :method => :delete, :class => 'icon icon-del')

  %p.pagination= pagination_links_full @pages, @count
- else
  %p.nodata
    = l(:label_no_data)

%form{:method => :get}
  %fieldset
    %legend= l(:label_filter_plural)

    = hidden_field_tag :organization_id, @organization.id
    = hidden_field_tag :shipping_type, params[:shipping_type]
    = hidden_field_tag :time_period_served_on, params[:time_period_served_on]
    = hidden_field_tag :time_period_created_on, params[:time_period_created_on]
    = hidden_field_tag :subject, params[:subject]

    %label{:for=>'outgoing_code'}= l(:field_outgoing_code) + ":"
    = text_field_tag 'outgoing_code', params[:outgoing_code], :size => 10

    %label{:for=>'signer'}= l(:field_signer) + ":"
    = text_field_tag 'signer', params[:signer], :size => 30

    %br

    %label{:for=>'incoming_code'}= l(:field_incoming_code) + ":"
    = text_field_tag 'incoming_code', params[:incoming_code], :size => 10

    %label{:for=>'recipient'}= l(:field_recipient) + ":"
    = text_field_tag 'recipient', params[:recipient], :size => 30

    %br

    %label{:for=>'answer_for'}= l(:field_answer_for) + ":"
    = text_field_tag 'answer_for', params[:answer_for], :size => 10

    %label{:for=>'shipping_to'}= l(:field_shipping_to) + ":"
    = text_field_tag 'shipping_to', params[:shipping_to], :size => 30

    = submit_tag l(:button_apply), :class => "small", :name => nil
    = link_to l(:button_clear), {:action => params[:action]}, :class => 'icon icon-reload'
