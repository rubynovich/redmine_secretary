.contextual
  = link_to l(:button_add), {:action => 'new', :organization_id => @organization.id}, :class => 'icon icon-add' if User.current.allowed_to?(:add_outgoing_letters, nil, :global=>true)

%h2= t(:label_outgoing)

- form_tag({}, :method => :get) do
  %fieldset
    %legend= l(:label_filter_plural)

    = hidden_field_tag :organization_id, @organization.id

    %label{:for=>'shipping_type'}= l(:field_shipping_type) + ":"
    %select{:id => 'shipping_type', :name => 'shipping_type', :class => "small", :onchange => "this.form.submit(); return false;"}
      %option
      - t(:list_shipping_type).each do |shipping_type|
        - if params[:shipping_type] == shipping_type
          %option{:value => shipping_type, :selected => "selected"}
            = shipping_type
            = "(#{OutgoingLetter.eql_field(shipping_type, :shipping_type).this_organization(@organization.id).count})"
        - else
          %option{:value => shipping_type}
            = shipping_type
            = "(#{OutgoingLetter.eql_field(shipping_type, :shipping_type).this_organization(@organization.id).count})"

= render :partial => "organization_menu"

.autoscroll
  %table.list
    %thead
      %tr
        = sort_header_tag('outgoing_code', :caption => l(:field_outgoing_code))
        = sort_header_tag('incoming_code', :caption => l(:field_incoming_code)) 
        = sort_header_tag('answer_for', :caption => l(:field_answer_for))        
        = sort_header_tag('signer', :caption => l(:field_signer))
        = sort_header_tag('shipping_to', :caption => l(:field_shipping_to))
        = sort_header_tag('shipping_type', :caption => l(:field_shipping_type))
        = sort_header_tag('shipping_on', :caption => l(:field_shipping_on))     
        = sort_header_tag('recipient', :caption => l(:field_recipient))
        = sort_header_tag('served_on', :caption => l(:field_served_on))
        = sort_header_tag('created_on', :caption => l(:field_created_on), :default_order => 'desc')
        %th    
    %tbody
      - for object in @collection
        %tr{:class => "user " + cycle("odd", "even")}
          %td.outgoing_code
            = link_to(h(object.outgoing_code), outgoing_letter_path(object))
          %td.incoming_code
            = link_to h(object.incoming_code)
          %td.answer_for
            - if object.answer_for.present?
              = link_to h(object.answer_for), :controller => :incoming_letters, :action => :show, :id => IncomingLetter.find(:first, :conditions => {:organization_id => @organization.id, :incoming_code => object.answer_for})
          %td.signer
            = h(object.signer)
          %td.shipping_to
            = h(object.shipping_to)
          %td.shipping_type
            = h(object.shipping_type)
          %td.shipping_on
            = format_date(object.shipping_on)
          %td.recipient
            = h(object.recipient)
          %td.served_on
            = format_time(object.served_on)
          %td.created_on{:align=>"center"}
            = format_time(object.created_on)
          %td.buttons
            - if object.editable_by?(User.current)
              = link_to(l(:button_update), edit_outgoing_letter_path(object), :class => 'icon icon-edit')
            - if object.destroyable_by?(User.current)
              = link_to(l(:button_delete), outgoing_letter_path(object), :confirm => l(:text_are_you_sure), :method => :delete, :class => 'icon icon-del')
              
%p.pagination= pagination_links_full @pages, @count
